@page "/"

<h1>Hello, gRPC!</h1>

<p>version 0.1.6</p>

@foreach (var line in ReadAllSettings())
{
    <p>@line</p>
}

<p>@backend</p>

<input placeholder="Something todo" @bind="newTodo" />

<button class="btn btn-primary" @onclick="@SayHello">Say Hello</button>



<p>@Greeting</p>

@functions {
    private string Greeting;
    private string newTodo = "World";

    private string backend_service_host = Environment.GetEnvironmentVariable("BACKEND_SERVICE_HOST");
    private string backend_service_port = Environment.GetEnvironmentVariable("BACKEND_SERVICE_PORT");
    private string backend = String.Format("http://{0}:{1}", backend_service_host, backend_service_port)


    async Task SayHello()
    {
        var channel = new Channel("backend", ChannelCredentials.Insecure);
        var client = new Greeter.GreeterClient(channel);

        var reply = await client.SayHelloAsync(new HelloRequest { Name = newTodo });
        Greeting = reply.Message + "!";

        await channel.ShutdownAsync();
    }

    static List<string> ReadAllSettings()
    {

        var configlist = new List<string>();

        try
        {
            var appSettings = ConfigurationManager.AppSettings;

            if (appSettings.Count == 0)
            {
                configlist.Add("AppSettings is empty.");
            }
            else
            {
                foreach (var key in appSettings.AllKeys)
                {
                    configlist.Add(String.Format("Key: {0} Value: {1}", key, appSettings[key]));
                }
            }
        }
        catch (ConfigurationErrorsException)
        {
            configlist.Add("Error reading app settings");
        }

        return configlist;
    }



}

@code{

}